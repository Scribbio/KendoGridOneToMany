@model ProductModel

@using KendoGridOneToMany.Models



@{
    ViewBag.Title = "Kendo Page";
}

<h1>Grid here</h1>

@(Html.Kendo().Grid<ProductModel>()
                                        .Name("persons")
                                        .AutoBind(true)
                                    .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .ServerOperation(false)
                                        .Model(model => model.Id(m => m.Id))
                                            .Read(read => read.Action("GetProducts", "Home"))
                                            .Update(up => up.Action("UpdateCategory", "Home"))
                                            .Create(x => x.Action("CreateProduct", "Home"))
                                            .Destroy(x => x.Action("UpdateCategory", "Home"))
                                    )
                                    .ToolBar(x => x.Create())
                                    .Columns(columns =>
                                    {
                                        columns.Bound(c => c.Id).Width(200);
                                        columns.Bound(c => c.Type);
                                        columns.Bound(c => c.DisplayCatogories);
                                        columns.Command(cmd => cmd.Edit());

                                    })
                                    .Events(ev => ev.Edit("addDeleteButton"))
                                .Pageable()
                                .Sortable()
                        .Editable(ed => ed.Mode(GridEditMode.PopUp).TemplateName("_PopUpView"))

)


@*<h2>Kendo UI DatePicker</h2>

    @(Html.Kendo().DatePicker()
                .Name("datepicker")
    )*@



<script type="text/javascript">
    function addDeleteButton(e) {
        $('<a class="k-button k-grid-add k-button-icontext custom" href="\\#"k-icon k-i-delete"></span>Delete</a>').insertAfter(".k-grid-update");
        $('.k-window-title').text("Edit Categories");
        $(".custom").click(function (e) {
            e.preventDefault();
            var formContainer = $("#popUpForm");
            SubmitInfo(formContainer);
        });
    }

    @*<script type="text/kendo-template" id="message">
    <div class="k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error" style="margin: 0.5em; display: block; " data-for="#=field#" data-valmsg-for="#=field#" id="#=field#_validationMessage">
        <span class="k-icon k-warning">
        </span>
        #=message#
        <div class="k-callout k-callout-n">
        </div>
    </div>
</script>*@

    var validationMessageTmpl = kendo.template(
        "<div id='#=message#_validationMessage' " +
        "class='k-widget k-tooltip k-tooltip-validation " +
        "k-invalid-msg field-validation-error' " +
        "style='margin: 0.5em; display: block;' data-for='#=field#' " +
        "data-val-msg-for='#=field#' role='alert'>" +
        "<span class='k-icon k-warning'></span>" +
        "#=message#" +
        "<div class='k-callout k-callout-n'></div>" +
        "</div>");

    function SubmitInfo(formContainer) {

        var grid = $("#persons").data("kendoGrid");
        var parameterMap = grid.dataSource.transport.parameterMap;
        var data = parameterMap({ sort: grid.dataSource.sort(), filter: grid.dataSource.filter(), group: grid.dataSource.group() });
        //var data = $("#persons").data('kendoGrid').dataSource.data();

        $.ajax({
            url: '@Url.Action("Delete", "Home")',
            type: "POST",
            dataType: "JSON",
            //data: formContainer.serialize(),
            data: data + "&" + formContainer.serialize(),
            success: function (result) {
                if (result.Errors) {
                    //Send error message to grid
                    var grid = $("#persons").data("kendoGrid");
                    showMessage(grid.editable.element, result.Errors.CategoryNotExist.errors[0], result.Errors.CategoryNotExist.errors);
                }
                else {
                    // Clear the input tags
                    formContainer.find("input[type='text']").each(function (i, element) {
                        $(this).val('');
                    });
                    $('#persons').data('kendoGrid').dataSource.read();
                    $('#persons').data('kendoGrid').refresh();
                }
            }
        });
    }

    var validationMessageTmpl = kendo.template($("#message").html());

    // handle grid error event
    error = function (args) {
        if (args.errors) {
            var grid = $("#persons").data("kendoGrid");
            alert("Here")
            grid.one("dataBinding", function (e) {
                e.preventDefault();   // cancel grid rebind if error occurs
                //for (var error in args.errors) {

                    showMessage(grid.editable.element, error, args.errors[error].errors);
                //}
            });
        }
    }

    function showMessage(container, name, errors) {
        //add the validation message to the form
        container.find("[data-valmsg-for=" + "\"Category\"" + "]")
            .replaceWith(validationMessageTmpl({ field: name, message: errors[0] }));      
    }

</script>

